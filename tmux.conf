# help from http://robots.thoughtbot.com/a-tmux-crash-course
# remap prefix
unbind C-b
set -g prefix C-a
bind-key a send-prefix # for using <C-a><a> to get to front of line
# for nested sessions
# bind -n C-b send-prefix # note: stop nesting tmux sessions! just use iterm tabs lol
bind R source-file ~/.tmux.conf

# vi, not emacs
setw -g mode-keys vi
# nvim, not vim
set -s escape-time 0
# the future has 8 bit color
set -g default-terminal "screen-256color"
set-option -g default-command ". > /dev/null 2>&1; reattach-to-user-namespace -l $SHELL"

# quick pane cycling, doesn't work..?
#unbind ^A
#bind ^A select-pane -t :.+
# pane splitting
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -c "#{pane_current_path}"
bind S choose-tree

# for navigating in and out of vim easily
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# help for nested tmux
bind h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-h" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-h" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-h" "select-pane -R"

# vim style copy in copy mode
# PSA: just option-click text (shift click on non OS X)
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# C-a C-w to send C-w
bind-key C-w send-keys C-w

# for mouse control
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on


# dont automatically rename windows
set -g allow-rename off 	# stops zsh
setw -g automatic-rename off 	# stops tmux
# shoutout to aykamko
###############################################################################
# size windows based on min client size connected to window, not min size connected to session
setw -g aggressive-resize on
# Status Bar
###############################################################################
set-option -g status-utf8 on

# status bar format
set-option -g status-position top
set-option -g status-bg colour235
set-option -g status-fg yellow
set-option -g status-attr default

# window format
setw -g window-status-format " #I:#W "
setw -g window-status-current-format " #I:#W "
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-current-fg yellow
setw -g window-status-current-bg colour236

# pane border
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour240
set-option -g pane-active-border-bg default

# message text
set-option -g message-bg colour235
set-option -g message-fg yellow

set -g status-interval 1
set -g status-justify left # left align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left ''
set -g status-right '#[fg=blue]#S #[fg=black]â€¢ #[fg=magenta,bg=default]#(echo $\(\($\(date +%%s\)\- $\(sysctl -n kern.boottime | cut -c9-18\)\)\) | awk "{printf\(\\\"%%dd %%dh %%dm\\\",\(\\\$1/60/60/24\),\(\\\$1/60/60%%24\),\(\\\$1/60%%60\)\)}") #[fg=colour15]%a %b %d %l:%M %p #[default]#[fg=colour15]#(battery -t) #[default]#[fg=black]#[fg=green]#h #[fg=black]#[default]'


# smarter window cycling
# cycle windows
bind -n C-w next-window
bind -n C-q previous-window

# bind window hotkeys
bind-key -n C-0 select-window -t :0
bind-key -n C-1 select-window -t :1
bind-key -n C-2 select-window -t :2
bind-key -n C-3 select-window -t :3
bind-key -n C-4 select-window -t :4
bind-key -n C-5 select-window -t :5
bind-key -n C-6 select-window -t :6
bind-key -n C-7 select-window -t :7
bind-key -n C-8 select-window -t :8
bind-key -n C-9 select-window -t :9

# tpm binds prefix I to reload / install, like :PluginInstall for Vundle
# prefix U to update
# tmux plugin manager
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-yank           \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \
  # tmux-plugins/tmux-sensible       \ # no tim pope i dont want to be you

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# for tmux-resurrect
set -g @resurrect-processes 'vim mvim "git log" "~MacVim.app"'
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
