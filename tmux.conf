# help from http://robots.thoughtbot.com/a-tmux-crash-course
# remap prefix
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
unbind C-b
bind C-a send-prefix

# vi, not emacs
setw -g mode-keys vi

# quick pane cycling, doesn't work..?
#unbind ^A
#bind ^A select-pane -t :.+
# pane splitting
bind v split-window -h
bind s split-window

# for navigating in and out of vim easily
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# for mouse control
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on


# shoutout to aykamko
###############################################################################
# Status Bar
###############################################################################
set-option -g status-utf8 on

# status bar format
set-option -g status-position top
set-option -g status-bg colour235
set-option -g status-fg yellow
set-option -g status-attr default

# window format
setw -g window-status-format " #I:#W "
setw -g window-status-current-format " #I:#W "
setw -g window-status-fg white
setw -g window-status-bg default
setw -g window-status-current-fg yellow
setw -g window-status-current-bg colour236

# pane border
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour240
set-option -g pane-active-border-bg default

# message text
set-option -g message-bg colour235
set-option -g message-fg yellow

set -g status-interval 1
set -g status-justify left # left align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left ''
set -g status-right '#[fg=blue]#S #[fg=black]• #[fg=magenta,bg=default]#(echo $\(\($\(date +%%s\)\- $\(sysctl -n kern.boottime | cut -c9-18\)\)\) | awk "{printf\(\\\"%%dd %%dh %%dm\\\",\(\\\$1/60/60/24\),\(\\\$1/60/60%%24\),\(\\\$1/60%%60\)\)}") #[fg=colour15]%a %b %d %l:%M %p#[default] #[fg=black]• #[fg=green]#h #[fg=black]#[default]'


# smarter window cycling
# cycle windows
bind -n C-w next-window
bind -n C-q previous-window

# bind window hotkeys
bind-key -n C-0 select-window -t :0
bind-key -n C-1 select-window -t :1
bind-key -n C-2 select-window -t :2
bind-key -n C-3 select-window -t :3
bind-key -n C-4 select-window -t :4
bind-key -n C-5 select-window -t :5
bind-key -n C-6 select-window -t :6
bind-key -n C-7 select-window -t :7
bind-key -n C-8 select-window -t :8
bind-key -n C-9 select-window -t :9
